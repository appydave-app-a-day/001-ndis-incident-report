# N8N API Configuration
# Copy this file to .env and configure your settings

# N8N Domain (without https://)
# Example: your-n8n-instance.app.n8n.cloud
VITE_N8N_DOMAIN=buildergeniobit.app.n8n.cloud

# API Mode: 'mock' for development, 'live' for production
# - mock: Uses local mock data for testing
# - live: Makes actual API calls to N8N workflows
VITE_API_MODE=mock

# Development Settings
# Uncomment and modify as needed

# Enable debug logging (automatically enabled in dev mode)
# VITE_DEBUG_API=true

# Custom API timeout (in milliseconds, default: 30000)
# VITE_API_TIMEOUT=30000

# ============================================================================
# N8N Workflow Configuration Guide
# ============================================================================

# Your backend developer should set up these N8N workflows:

# 1. Clarification Questions Workflow
#    Endpoint: https://{VITE_N8N_DOMAIN}/webhook/narrative-report-clarification
#    Method: POST
#    Input: participant_name, reporter_name, location, before_event, during_event, end_of_event, post_event_support
#    Output: before_event_questions[], during_event_questions[], end_of_event_questions[], post_event_questions[]

# 2. Narrative Consolidation Workflow  
#    Endpoint: https://{VITE_N8N_DOMAIN}/webhook/narrative-consolidation
#    Method: POST
#    Input: clarification_questions[], custom_instructions
#    Output: narrative_extra

# ============================================================================
# Environment Setup Instructions
# ============================================================================

# 1. Copy this file: cp .env.example .env
# 2. Update VITE_N8N_DOMAIN with your N8N instance domain
# 3. Set VITE_API_MODE to 'mock' for development or 'live' for production
# 4. Restart your development server after making changes

# ============================================================================
# Security Notes
# ============================================================================

# - Never commit your actual .env file to version control
# - The .env file is already included in .gitignore
# - Use environment-specific values for different deployments
# - Consider using secrets management for production deployments